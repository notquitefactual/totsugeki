name: Builds

on:
  push:
  pull_request:
  release:
    types: [created]

defaults:
  run:
    shell: bash

jobs:
  lint:
    if: ${{ github.event_name != 'release'}}
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: golangci/golangci-lint-action@v2
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17
    # Silly hack to pass GOCACHE between steps
    - name: go env
      run: |
        echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV
        echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV
        echo "PATH=${PATH}:$(go env GOPATH)/bin" >> $GITHUB_ENV
    - uses: actions/cache@v2
      with:
        path: |
          ${{ env.GOCACHE }}
          ${{ env.GOMODCACHE }}
        key: ${{ runner.os }}-go-cache-${{ hashFiles('go.sum') }}
        restore-keys: |
           ${{ runner.os }}-go-cache-
    - name: go generate
      run: |
        go install github.com/tc-hib/go-winres@latest
        go generate
    - run: go build -v -trimpath -ldflags="-X main.Version=$(git describe --always --tags --dirty --broken)"
    - run: go build -v -trimpath -ldflags="-X main.Version=$(git describe --always --tags --dirty --broken)-unga-bunga -X main.UngaBungaMode=true" -o totsugeki-unga-bunga.exe
      if: ${{ github.event_name == 'release'}}
    - uses: actions/upload-artifact@v2
      with:
        name: totsugeki
        path: totsugeki*.exe
        retention-days: 1
    - uses: optix2000/ghaction-virustotal@v2
      if: ${{ github.event_name != 'pull_request' && github.event_name != 'release' }}
      with:
        vt_api_key: ${{ secrets.VIRUSTOTAL_API_KEY }}
        files: totsugeki*.exe
  release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release'}}
    permissions:
      contents: write
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: totsugeki
    - uses: softprops/action-gh-release@v0.1.7
      with:
        files: totsugeki*.exe
    - uses: optix2000/ghaction-virustotal@v2
      with:
        vt_api_key: ${{ secrets.VIRUSTOTAL_API_KEY }}
        files: totsugeki.*.exe
        update_release_body: true
